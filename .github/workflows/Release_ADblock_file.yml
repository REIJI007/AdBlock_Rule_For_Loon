# 工作流名称
name: Release_ADblock_file

# 触发条件
on:
  schedule:
    - cron: '*/20 * * * *'  # 每20分钟运行一次
  workflow_dispatch:  # 允许手动触发工作流

# 工作流程中的作业
jobs:
  create-release:
    runs-on: ubuntu-latest  # 在最新版本的Ubuntu上运行
    steps:
      # 步骤1：检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 步骤2：获取当前时间
      - name: Get current time
        id: current-time
        run: echo "time=$(date +'%y%m%d%H%M')" >> $GITHUB_ENV  # 将时间保存为环境变量

      # 步骤3：更新时间戳文件
      - name: Update timestamp file
        run: echo "${{ env.time }}" > timestamp.txt  # 将时间写入timestamp.txt文件

      # 步骤4：强制添加、提交并推送更改
      - name: Force add and commit changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -f adblock_reject_surge_domainset.txt adblock_reject_surge_ruleset.txt timestamp.txt
          git commit -m "Forced update of adblock files" || echo "No changes to commit"
          git push origin main --force  # 强制推送到main分支
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # 使用存储在仓库密钥中的TOKEN

      # 步骤5：创建新的发布
      - name: Create Release
        id: create_release
        run: |
          retry() {
            local n=$1
            local cmd="${@:2}"
            local i=0
            while [ $i -lt $n ]; do
              eval "$cmd" && return 0
              i=$((i+1))
              echo "Retry $i/$n failed, retrying in 10 seconds..."
              sleep 10
            done
            return 1
          }
          retry 5 'gh release create --tag release-${{ env.time }} --title "Release ${{ env.time }}" --notes "Periodic release of adblock files." --target main'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # 使用存储在仓库密钥中的TOKEN

      # 步骤6：上传adblock_reject_surge_domainset.txt
      - name: Upload adblock_reject_surge_domainset.txt
        run: |
          retry() {
            local n=$1
            local cmd="${@:2}"
            local i=0
            while [ $i -lt $n ]; do
              eval "$cmd" && return 0
              i=$((i+1))
              echo "Retry $i/$n failed, retrying in 10 seconds..."
              sleep 10
            done
            return 1
          }
          upload_cmd="gh release upload ${{ steps.create_release.outputs.upload_url }} ./adblock_reject_surge_domainset.txt --clobber"
          retry 5 "$upload_cmd"
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # 使用存储在仓库密钥中的TOKEN

      # 步骤7：上传adblock_reject_surge_ruleset.txt
      - name: Upload adblock_reject_surge_ruleset.txt
        run: |
          retry() {
            local n=$1
            local cmd="${@:2}"
            local i=0
            while [ $i -lt $n ]; do
              eval "$cmd" && return 0
              i=$((i+1))
              echo "Retry $i/$n failed, retrying in 10 seconds..."
              sleep 10
            done
            return 1
          }
          upload_cmd="gh release upload ${{ steps.create_release.outputs.upload_url }} ./adblock_reject_surge_ruleset.txt --clobber"
          retry 5 "$upload_cmd"
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # 使用存储在仓库密钥中的TOKEN
